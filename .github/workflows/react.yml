# Workflow to automate deployment of a React app to GitHub Pages

name: Deploy React app to Pages

# Triggers the workflow on pushes to the main branch or manual triggering
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Define permissions required for GitHub Actions
permissions:
  contents: read
  pages: write
  id-token: write

# Configure concurrency settings
concurrency:
  group: "pages"
  cancel-in-progress: false

# Define the jobs within this workflow
jobs:
  # Job to build the React app
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Detect the package manager (Yarn or npm) used in the project
      - name: Detect package manager
        id: detect-package-manager
        run: |
          # Check for lock files to determine the package manager
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npm" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # Step 3: Setup Node.js environment with Node version 14
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "14"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # Step 4: Install dependencies based on the detected package manager
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # Step 5: Build the React app
      - name: Build React app
        run: ${{ steps.detect-package-manager.outputs.runner }} run build

      # Step 6: Upload the build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: react-build
          path: build

  # Job to deploy the built React app to GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 7: Download the build artifact
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: react-build
          path: build
          
      # Step 8: Checkout the repository code for deployment
      - name: Checkout
        uses: actions/checkout@v4

      # Step 9: Deploy the built React app to GitHub Pages using a specific action
      - name: Deploy to GitHub Pages
        id: deployment
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: release
          folder: build
